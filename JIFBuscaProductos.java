/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mercadolibre;

import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Viveros
 */
public class JIFBuscaProductos extends javax.swing.JInternalFrame {
    private static Connection con;
    private static PreparedStatement stmt;
    private static final String driver="com.mysql.cj.jdbc.Driver";      
    private static final String user="bl00per";
    private static final String pass="123456";
    private static final String url="jdbc:mysql://localhost:3306/bdprueba?serverTimezone=UTC";
    ResultSet rs;
    int idProd;
    /**
     * Creates new form JIFAltaProductos
     */
    public JIFBuscaProductos() throws SQLException {
        initComponents();
        con=null;
        stmt=null;
        try{
            Class.forName(driver);
            // Nos conectamos a la bd
            con= DriverManager.getConnection(url, user, pass);            
            stmt = con.prepareStatement("SELECT * FROM productos;");
            rs=stmt.executeQuery();

            if (rs.next()){
                idProd=rs.getInt("idproductos");
                txtNombre.setText(rs.getString("nombre"));
                txtAlmacenamiento.setText(rs.getString("espacio"));
                txtMinProd.setText(rs.getString("minprod"));
                txtMaxProd.setText(rs.getString("maxprod"));
                txtMinCons.setText(rs.getString("mincons"));
                txtMaxCons.setText(rs.getString("maxcons"));
            }
        }
        // Si existe algún error mostramos un mensaje de error
        catch (ClassNotFoundException | SQLException e){
            jLabel1.setText("Error: " + e);
        }
        //con.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAlmacenamiento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMinProd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaxProd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMinCons = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMaxCons = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();

        setClosable(true);
        setTitle("Edición de productos");

        jLabel1.setText("Nombre del producto:");

        jLabel2.setText("Espacio en almacenamiento:");

        jLabel3.setText("Mínimo de tiempo de producción:");

        jLabel4.setText("Máximo de tiempo de producción:");

        jLabel5.setText("Mínimo de tiempo de consumo:");

        jLabel6.setText("Máximo de tiempo de consumo:");

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAlmacenamiento))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMinProd))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaxProd))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtMinCons))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaxCons))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAlmacenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMinProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaxProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMinCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaxCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnterior)
                    .addComponent(btnSiguiente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        try {
            if (rs.next()){
                idProd=rs.getInt("idproductos");
                txtNombre.setText(rs.getString("nombre"));
                txtAlmacenamiento.setText(rs.getString("espacio"));
                txtMinProd.setText(rs.getString("minprod"));
                txtMaxProd.setText(rs.getString("maxprod"));
                txtMinCons.setText(rs.getString("mincons"));
                txtMaxCons.setText(rs.getString("maxcons"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JIFBuscaProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        try {
            if (rs.previous()){
                idProd=rs.getInt("idproductos");
                txtNombre.setText(rs.getString("nombre"));
                txtAlmacenamiento.setText(rs.getString("espacio"));
                txtMinProd.setText(rs.getString("minprod"));
                txtMaxProd.setText(rs.getString("maxprod"));
                txtMinCons.setText(rs.getString("mincons"));
                txtMaxCons.setText(rs.getString("maxcons"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JIFBuscaProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try{
            Class.forName(driver);
            // Nos conectamos a la bd
            con= DriverManager.getConnection(url, user, pass);
            stmt = con.prepareStatement("UPDATE productos SET nombre=?,espacio=?,minprod=?,maxprod=?,mincons=?,maxcons=? where idproductos="+idProd);
            stmt.setString(1, txtNombre.getText());
            stmt.setInt(2, Integer.valueOf( txtAlmacenamiento.getText()));
            stmt.setInt(3,Integer.valueOf(txtMinProd.getText()));
            stmt.setInt(4,Integer.valueOf(txtMaxProd.getText()));
            stmt.setInt(5,Integer.valueOf(txtMinCons.getText()));
            stmt.setInt(6,Integer.valueOf(txtMaxCons.getText()));
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se editó el producto");
            rs.close();
            stmt = con.prepareStatement("SELECT * FROM productos;");
            rs=stmt.executeQuery();
            if (rs.next()){
                idProd=rs.getInt("idproductos");
                txtNombre.setText(rs.getString("nombre"));
                txtAlmacenamiento.setText(rs.getString("espacio"));
                txtMinProd.setText(rs.getString("minprod"));
                txtMaxProd.setText(rs.getString("maxprod"));
                txtMinCons.setText(rs.getString("mincons"));
                txtMaxCons.setText(rs.getString("maxcons"));
            }
        }
        // Si existe algún error mostramos un mensaje de error
        catch (ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,"Error: " + e);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try{
            Class.forName(driver);
            // Nos conectamos a la bd
            con= DriverManager.getConnection(url, user, pass);
            stmt = con.prepareStatement("DELETE from productos where idproductos="+idProd);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se eliminó el producto");
            rs.close();
            stmt = con.prepareStatement("SELECT * FROM productos;");
            rs=stmt.executeQuery();
            if (rs.next()){
                idProd=rs.getInt("idproductos");
                txtNombre.setText(rs.getString("nombre"));
                txtAlmacenamiento.setText(rs.getString("espacio"));
                txtMinProd.setText(rs.getString("minprod"));
                txtMaxProd.setText(rs.getString("maxprod"));
                txtMinCons.setText(rs.getString("mincons"));
                txtMaxCons.setText(rs.getString("maxcons"));
            }
        }
        // Si existe algún error mostramos un mensaje de error
        catch (ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,"Error: " + e);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtAlmacenamiento;
    private javax.swing.JTextField txtMaxCons;
    private javax.swing.JTextField txtMaxProd;
    private javax.swing.JTextField txtMinCons;
    private javax.swing.JTextField txtMinProd;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
